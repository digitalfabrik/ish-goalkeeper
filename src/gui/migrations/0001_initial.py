# Generated by Django 2.2.1 on 2019-08-02 09:50

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import filer.fields.file
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('filer', '0011_auto_20190418_0137'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=500, verbose_name='Kurstitel')),
                ('location', models.TextField(max_length=500, verbose_name='Ort')),
                ('active', models.BooleanField(blank=True, verbose_name='Aktiv')),
                ('dates', models.TextField(blank=True, max_length=500, verbose_name='Kurszeit')),
            ],
            options={
                'verbose_name': 'Kurs',
                'verbose_name_plural': 'Kurse',
            },
        ),
        migrations.CreateModel(
            name='CourseLesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gui.Course')),
            ],
            options={
                'verbose_name': 'Kurslektion',
                'verbose_name_plural': 'Kurslektionen',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=500)),
                ('description', models.TextField(blank=True, verbose_name='Beschreibung')),
                ('questions', models.TextField(blank=True, verbose_name='Fragen')),
                ('mandatory', models.BooleanField(blank=True, verbose_name='Verpflichtend')),
                ('feedback_required', models.BooleanField(blank=True, verbose_name='Feedback erforderlich')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='gui.Lesson')),
            ],
            options={
                'verbose_name': 'Lektion',
                'verbose_name_plural': 'Lektionen',
            },
        ),
        migrations.CreateModel(
            name='LessonMeta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=150, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Lektionsmetafeld',
                'verbose_name_plural': 'Lektionsmetafelder',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Titel')),
                ('text', models.TextField(verbose_name='Nachricht')),
                ('pub_date', models.DateTimeField(verbose_name='Veröffentlichungsdatum')),
            ],
            options={
                'verbose_name': 'Neuigkeit',
                'verbose_name_plural': 'Neuigkeiten',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True, max_length=500, verbose_name='Biographie')),
                ('location', models.CharField(blank=True, max_length=30, verbose_name='Wohnort')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profil',
                'verbose_name_plural': 'Profile',
            },
        ),
        migrations.CreateModel(
            name='LessonMetaData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.TextField(max_length=150, verbose_name='Text')),
                ('description', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gui.LessonMeta')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gui.Lesson')),
            ],
            options={
                'verbose_name': 'Lektionsmetainformation',
                'verbose_name_plural': 'Lektionsmetainformationen',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='Datum')),
                ('comment', models.TextField(blank=True, max_length=1000, verbose_name='Kommentar')),
                ('gender_male', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='Männlich')),
                ('gender_female', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='Weiblich')),
                ('gender_other', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='Anderes Geschlecht')),
                ('positive', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='Grüne Bälle')),
                ('negative', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='Rote Bälle')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gui.CourseLesson')),
                ('feedbacklesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gui.Lesson')),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedback',
            },
        ),
        migrations.CreateModel(
            name='CourseUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gui.Course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Coach-Zuordnung',
                'verbose_name_plural': 'Coach-Zuordnungen',
            },
        ),
        migrations.AddField(
            model_name='courselesson',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gui.Lesson'),
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(max_length=150, verbose_name='Beschreibung')),
                ('attached_file', filer.fields.file.FilerFileField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Anhang', to='filer.File')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gui.Lesson')),
            ],
            options={
                'verbose_name': 'Anhang',
                'verbose_name_plural': 'Anhänge',
            },
        ),
    ]
